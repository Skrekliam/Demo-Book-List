{"version":3,"sources":["components/add-a-book/GenreLists.js","consts.js","components/add-a-book/AddABook.js","components/dashboard/Dashboard.js","App.js","index.js"],"names":["genres","unshift","genresList","map","el","genreLists","jsonIp","AddABook","match","useState","bTitle","setbTitle","aName","setaName","cat","setCat","ISBN","setISBN","edit","setEdit","handleEdit","a","axios","get","ip","params","id","then","res","data","book_name","author_name","category","catch","err","alert","useEffect","patch","length","ind","console","log","post","validated","setValidated","Col","xl","sm","md","to","Button","variant","size","block","Container","Form","noValidate","onSubmit","event","form","currentTarget","preventDefault","checkValidity","stopPropagation","handleSubmitButton","Group","as","Row","controlId","Label","column","Control","required","type","value","onChange","e","target","placeholder","Feedback","htmlSize","custom","InputGroup","hasValidation","Prepend","Text","pattern","maxLength","minLength","span","offset","Dashboard","props","setData","refresh","setRefresh","handleDelete","window","confirm","delete","listBooks","ButtonGroup","pathname","onClick","Jumbotron","document","title","Table","striped","bordered","hover","App","exact","path","component","withRouter","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ce692ab6.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst genres = [\"Action\", \"Adventure\", \"Comedy\", \"Drama\", \"Fantasy\"];\r\ngenres.unshift('');\r\nconst genresList = genres.map((el) => <option key={el}>{el}</option>);\r\n\r\nexport default function genreLists() {\r\n  return genresList;\r\n}\r\n","//Json Server ip address\r\nlet jsonIp;\r\nexport default jsonIp = '192.168.1.2';","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Form,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  InputGroup,\r\n  Container,\r\n} from \"react-bootstrap\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Link,\r\n} from \"react-router-dom\";\r\nimport GenresList from \"./GenreLists\";\r\nimport ip from \"../../consts\";\r\n\r\nexport default function AddABook({ match }) {\r\n  const [bTitle, setbTitle] = useState(\"\");\r\n  const [aName, setaName] = useState(\"\");\r\n  const [cat, setCat] = useState(\"Drama\");\r\n  const [ISBN, setISBN] = useState(\"\");\r\n  const [edit, setEdit] = useState(false);\r\n  const [isCorrect, setIsCorrect] = useState(false);\r\n  const handleEdit = async () => {\r\n    setEdit(true);\r\n    let el = await axios\r\n      .get(`http://${ip}:3001/books/${match.params.id}`)\r\n      .then((res) => {\r\n        setbTitle(res.data.book_name);\r\n        setaName(res.data.author_name);\r\n        setCat(res.data.category);\r\n        setISBN(res.data.ISBN);\r\n      })\r\n      .catch((err) => alert(err));\r\n  };\r\n  useEffect(() => {\r\n    if (match.params.id) {\r\n      handleEdit();\r\n    }\r\n  }, []);\r\n\r\n  const resetF = () => {\r\n    setbTitle(\"\");\r\n    setaName(\"\");\r\n    setCat(\"\");\r\n    setISBN(\"\");\r\n  };\r\n\r\n  function handleCat(e) {\r\n    setCat(e.target.value);\r\n  }\r\n\r\n  async function handleSubmitButton() {\r\n    if (edit) {\r\n      axios\r\n        .patch(`http://${ip}:3001/books/${match.params.id}`, {\r\n          id: match.params.id,\r\n          book_name: bTitle,\r\n          author_name: aName,\r\n          category: cat,\r\n          ISBN: ISBN,\r\n        })\r\n        .then(() => alert(\"Successfull update\"))\r\n        .catch((err) => alert(err));\r\n    } else {\r\n      let ind = await axios\r\n        .get(`http://${ip}:3001/books`)\r\n        .then((res) => {\r\n          return res.data[res.data.length - 1].id;\r\n        })\r\n        .catch((err) => alert(err));\r\n      ind += 1;\r\n      console.log(ind);\r\n      axios\r\n        .post(`http://${ip}:3001/books`, {\r\n          id: ind,\r\n          book_name: bTitle,\r\n          author_name: aName,\r\n          category: cat,\r\n          ISBN: ISBN,\r\n        })\r\n        .then((res) => alert(`Book successfully added with index: ${ind}`))\r\n        .catch((err) => alert(\"something went wrong: \" + err));\r\n\r\n      // window.location.reload();\r\n    }\r\n  }\r\n\r\n  const [validated, setValidated] = useState(false);\r\n\r\n  const handleSubmit = (event) => {\r\n    const form = event.currentTarget;\r\n\r\n    event.preventDefault();\r\n\r\n    if (form.checkValidity() === false) {\r\n      event.stopPropagation();\r\n    } else {\r\n      handleSubmitButton();\r\n      resetF();\r\n      setValidated(true);\r\n    }\r\n    setValidated(true);\r\n\r\n    //\r\n  };\r\n  return (\r\n    <>\r\n      <Col xl={2} sm={2} md={2}>\r\n        <Link to=\"/\">\r\n          <Button variant=\"outline-primary\" size=\"sm\" block>\r\n            &lt; Dashboard\r\n          </Button>\r\n        </Link>\r\n      </Col>\r\n      <Container>\r\n        <h1>{edit ? \"Edit book\" : \"Add new book\"}</h1>\r\n\r\n        <Col xl={12}>\r\n          <br />\r\n          <br />\r\n          <Col xl={9}>\r\n            <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n              <Form.Group as={Row} controlId=\"bTitle\">\r\n                <Form.Label column sm={2}>\r\n                  Book title\r\n                </Form.Label>\r\n                <Col sm={10}>\r\n                  <Form.Control\r\n                    required\r\n                    type=\"text\"\r\n                    value={bTitle}\r\n                    onChange={(e) => {\r\n                      setbTitle(e.target.value);\r\n                    }}\r\n                    placeholder=\"Enter here book title\"\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    Please enter book title.\r\n                  </Form.Control.Feedback>\r\n                </Col>\r\n              </Form.Group>\r\n              <Form.Group as={Row} controlId=\"aName\">\r\n                <Form.Label column sm={2}>\r\n                  Author name\r\n                </Form.Label>\r\n                <Col sm={10}>\r\n                  <Form.Control\r\n                    required\r\n                    type=\"text\"\r\n                    value={aName}\r\n                    onChange={(e) => setaName(e.target.value)}\r\n                    placeholder=\"Enter here author name\"\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    Please enter author name.\r\n                  </Form.Control.Feedback>\r\n                </Col>\r\n              </Form.Group>\r\n              <Form.Group as={Row}>\r\n                <Form.Label column sm={2}>\r\n                  Category\r\n                </Form.Label>\r\n                <Col sm={10}>\r\n                  <Form.Control\r\n                    htmlSize={3}\r\n                    custom\r\n                    required\r\n                    as=\"select\"\r\n                    onChange={handleCat}\r\n                  >\r\n                    <GenresList />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      Please choose genre.\r\n                    </Form.Control.Feedback>\r\n                  </Form.Control>\r\n                </Col>\r\n              </Form.Group>\r\n              <Form.Group as={Row} controlId=\"ISBN\">\r\n                <Form.Label column sm={2}>\r\n                  International Standard Book Number\r\n                </Form.Label>\r\n                <Col sm={10}>\r\n                  <InputGroup hasValidation>\r\n                    <InputGroup.Prepend>\r\n                      <InputGroup.Text id=\"basic-addon3\">ISBN</InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      pattern=\"\\d*\"\r\n                      maxLength=\"13\"\r\n                      minLength=\"13\"\r\n                      value={ISBN}\r\n                      required\r\n                      onChange={(e) => setISBN(e.target.value)}\r\n                      placeholder=\"Enter here international Standard Book Number\"\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      Please enter ISBN (13 digits).\r\n                    </Form.Control.Feedback>\r\n                  </InputGroup>\r\n                </Col>\r\n              </Form.Group>\r\n              <Form.Group as={Row}>\r\n                <Col sm={{ span: 10, offset: 2 }}>\r\n                  {/* <Alert\r\n                      variant=\"danger\"\r\n                      style={{\r\n                        display:\r\n                          aName.length > 0 &&\r\n                          bTitle.length > 0 &&\r\n                          ISBN.length === 13\r\n                            ? \"none\"\r\n                            : \"\",\r\n                      }}\r\n                    >\r\n                      <Alert.Heading>\r\n                        Red bordered inputs cannot be empty!\r\n                      </Alert.Heading>\r\n                      <p style={{ display: bTitle.length > 0 ? \"none\" : \"\" }}>\r\n                        Please enter Book title\r\n                      </p>\r\n                      <p style={{ display: aName.length > 0 ? \"none\" : \"\" }}>\r\n                        Please enter Author name\r\n                      </p>\r\n                      <p style={{ display: ISBN.length === 13 ? \"none\" : \"\" }}>\r\n                        Please enter correct ISBN number (13 digits){\" \"}\r\n                        {13 - ISBN.length} left\r\n                      </p>\r\n                    </Alert> */}\r\n                  <Button\r\n                    type=\"submit\"\r\n                    size=\"lg\"\r\n                    block\r\n                    // onClick={handleClick}\r\n                    // disabled={\r\n                    //     aName.length < 1 ||\r\n                    //     bTitle.length < 1 ||\r\n                    //     ISBN.length !== 13\r\n                    //   }\r\n                  >\r\n                    {edit ? `Save as #${match.params.id}` : \"Add a Book\"}\r\n                  </Button>\r\n                </Col>\r\n              </Form.Group>\r\n            </Form>\r\n          </Col>\r\n        </Col>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Table,\r\n  ButtonGroup,\r\n  Jumbotron,\r\n  Col,\r\n  Container,\r\n} from \"react-bootstrap\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport ip from \"../../consts\";\r\n\r\nexport default function Dashboard(props) {\r\n  const [data, setData] = useState([]);\r\n  const [refresh, setRefresh] = useState(false);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`http://${ip}:3001/books`)\r\n      .then((res) => {\r\n        setData(res.data);\r\n        console.log(\"Data loaded successfully\");\r\n      })\r\n      .catch((err) => alert(err));\r\n  }, [refresh]);\r\n\r\n  const handleDelete = (event) => {\r\n    console.log(event);\r\n    let id = event.target.id;\r\n    let confirmDel = window.confirm(\r\n      `You realy want to delete book with index ${id}?`\r\n    );\r\n    if (confirmDel) {\r\n      axios\r\n        .delete(`http://${ip}:3001/books/${id}`)\r\n        .then((res) => alert(\"Book deleted successfully\"))\r\n        .catch((err) => alert(`Error: \\t ${err}`));\r\n    }\r\n    setRefresh(!refresh);\r\n  };\r\n\r\n  let listBooks = data.map((el) => (\r\n    <tr key={el.id}>\r\n      <td>{el.id}</td>\r\n      <td>{el.book_name}</td>\r\n      <td>{el.author_name}</td>\r\n      <td>{el.category}</td>\r\n      <td>{el.ISBN}</td>\r\n      <td>\r\n        <ButtonGroup>\r\n          <Link\r\n            to={{\r\n              pathname: `/book/${el.id}`,\r\n            }}\r\n          >\r\n            <Button variant=\"warning\">Edit</Button>\r\n          </Link>\r\n          <Button\r\n            variant=\"outline-danger\"\r\n            size=\"sm\"\r\n            id={el.id}\r\n            onClick={handleDelete}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </ButtonGroup>\r\n      </td>\r\n    </tr>\r\n  ));\r\n  // console.log(listBooks);\r\n\r\n  return (\r\n    <div>\r\n      <Jumbotron>\r\n        <Col xl={5}>\r\n          <h1>{document.title}</h1>\r\n          <p>Here you can add books to your list, remove, or edit them</p>\r\n        </Col>\r\n        <Col xl={3}>\r\n          <Link to=\"/book\">\r\n            <Button variant=\"outline-primary\" size=\"sm\">\r\n              Add Book &gt;\r\n            </Button>\r\n          </Link>\r\n        </Col>\r\n      </Jumbotron>\r\n      <Container>\r\n        <Table striped bordered hover>\r\n          <thead variant=\"dark\">\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Book title</th>\r\n              <th>Author name</th>\r\n              <th>Category</th>\r\n              <th>ISBN</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{listBooks}</tbody>\r\n        </Table>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport AddABook from \"./components/add-a-book/AddABook\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport { useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link, withRouter } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={withRouter(Dashboard)} />\n        <Route exact path=\"/book\" component={withRouter(AddABook)} />\n        <Route exact path=\"/book/:id\" component={withRouter(AddABook)} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}